{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91981\\\\algo\\\\gpt-pilot\\\\workspace\\\\Algorithm_Generation_Framework_(AGF)\\\\frontend\\\\src\\\\components\\\\AlgorithmDropdown.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AlgorithmDropdown = () => {\n  _s();\n  // State to store the selected algorithm\n  const [selectedAlgorithm, setSelectedAlgorithm] = useState('');\n\n  // List of algorithms\n  const algorithms = [{\n    name: \"Find the maximum value in a list\",\n    algorithm: \"max\"\n  }, {\n    name: \"Find a specific value in a list\",\n    algorithm: \"linear_search\"\n  },\n  // ... include all other algorithms here\n  {\n    name: \"Solve the job sequencing problem with deadlines and profits\",\n    algorithm: \"job_sequencing\"\n  }];\n\n  // Handle selection change\n  const handleChange = event => {\n    setSelectedAlgorithm(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"algorithm-select\",\n      children: \"Choose an algorithm:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"algorithm-select\",\n      value: selectedAlgorithm,\n      onChange: handleChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"--Please choose an option--\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), algorithms.map((algo, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: algo.algorithm,\n        children: algo.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), selectedAlgorithm && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Selected Algorithm: \", selectedAlgorithm]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(AlgorithmDropdown, \"ShMdoLkXJ3IBqGYX3wKgSQjbUGs=\");\n_c = AlgorithmDropdown;\nexport default AlgorithmDropdown;\nvar _c;\n$RefreshReg$(_c, \"AlgorithmDropdown\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AlgorithmDropdown","_s","selectedAlgorithm","setSelectedAlgorithm","algorithms","name","algorithm","handleChange","event","target","value","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","map","algo","index","_c","$RefreshReg$"],"sources":["C:/Users/91981/algo/gpt-pilot/workspace/Algorithm_Generation_Framework_(AGF)/frontend/src/components/AlgorithmDropdown.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst AlgorithmDropdown = () => {\r\n  // State to store the selected algorithm\r\n  const [selectedAlgorithm, setSelectedAlgorithm] = useState('');\r\n\r\n  // List of algorithms\r\n  const algorithms = [\r\n    { name: \"Find the maximum value in a list\", algorithm: \"max\" },\r\n    { name: \"Find a specific value in a list\", algorithm: \"linear_search\" },\r\n    // ... include all other algorithms here\r\n    { name: \"Solve the job sequencing problem with deadlines and profits\", algorithm: \"job_sequencing\" }\r\n  ];\r\n\r\n  // Handle selection change\r\n  const handleChange = (event) => {\r\n    setSelectedAlgorithm(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <label htmlFor=\"algorithm-select\">Choose an algorithm:</label>\r\n      <select id=\"algorithm-select\" value={selectedAlgorithm} onChange={handleChange}>\r\n        <option value=\"\">--Please choose an option--</option>\r\n        {algorithms.map((algo, index) => (\r\n          <option key={index} value={algo.algorithm}>{algo.name}</option>\r\n        ))}\r\n      </select>\r\n\r\n      {selectedAlgorithm && <p>Selected Algorithm: {selectedAlgorithm}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AlgorithmDropdown;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B;EACA,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;;EAE9D;EACA,MAAMO,UAAU,GAAG,CACjB;IAAEC,IAAI,EAAE,kCAAkC;IAAEC,SAAS,EAAE;EAAM,CAAC,EAC9D;IAAED,IAAI,EAAE,iCAAiC;IAAEC,SAAS,EAAE;EAAgB,CAAC;EACvE;EACA;IAAED,IAAI,EAAE,6DAA6D;IAAEC,SAAS,EAAE;EAAiB,CAAC,CACrG;;EAED;EACA,MAAMC,YAAY,GAAIC,KAAK,IAAK;IAC9BL,oBAAoB,CAACK,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC1C,CAAC;EAED,oBACEX,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAOa,OAAO,EAAC,kBAAkB;MAAAD,QAAA,EAAC;IAAoB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC9DjB,OAAA;MAAQkB,EAAE,EAAC,kBAAkB;MAACP,KAAK,EAAER,iBAAkB;MAACgB,QAAQ,EAAEX,YAAa;MAAAI,QAAA,gBAC7EZ,OAAA;QAAQW,KAAK,EAAC,EAAE;QAAAC,QAAA,EAAC;MAA2B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACpDZ,UAAU,CAACe,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC1BtB,OAAA;QAAoBW,KAAK,EAAEU,IAAI,CAACd,SAAU;QAAAK,QAAA,EAAES,IAAI,CAACf;MAAI,GAAxCgB,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA4C,CAC/D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,EAERd,iBAAiB,iBAAIH,OAAA;MAAAY,QAAA,GAAG,sBAAoB,EAACT,iBAAiB;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjE,CAAC;AAEV,CAAC;AAACf,EAAA,CA9BID,iBAAiB;AAAAsB,EAAA,GAAjBtB,iBAAiB;AAgCvB,eAAeA,iBAAiB;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}