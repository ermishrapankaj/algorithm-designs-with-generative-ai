{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91981\\\\algo\\\\gpt-pilot\\\\workspace\\\\Algorithm_Generation_Framework_(AGF)\\\\frontend\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport CustomModal from './Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [modalContent, setModalContent] = useState('');\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      await axios.post('/api/auth/login', {\n        username,\n        password\n      });\n      setModalContent('Algo generation successful');\n      setShowModal(true);\n    } catch (error) {\n      setModalContent('Algo generation failed failed: ' + error.response.data);\n      setShowModal(true);\n    }\n  };\n  const handleClose = () => setShowModal(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CustomModal, {\n      showModal: showModal,\n      handleClose: handleClose,\n      title: \"Login Status\",\n      children: modalContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Prompt:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Algo Generation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Login, \"RTTV3CV45FNwZfM7fwzZxr30N3o=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","CustomModal","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","username","setUsername","showModal","setShowModal","modalContent","setModalContent","handleLogin","e","preventDefault","post","password","error","response","data","handleClose","children","title","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/91981/algo/gpt-pilot/workspace/Algorithm_Generation_Framework_(AGF)/frontend/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport CustomModal from './Modal';\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [modalContent, setModalContent] = useState('');\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post('/api/auth/login', { username, password });\r\n      setModalContent('Algo generation successful');\r\n      setShowModal(true);\r\n    } catch (error) {\r\n      setModalContent('Algo generation failed failed: ' + error.response.data);\r\n      setShowModal(true);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => setShowModal(false);\r\n\r\n  return (\r\n    <>\r\n      <CustomModal showModal={showModal} handleClose={handleClose} title=\"Login Status\" children={modalContent} />\r\n      <form onSubmit={handleLogin}>\r\n        <label>\r\n          Prompt:\r\n          <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} />\r\n        </label>\r\n          <button type=\"submit\">Algo Generation</button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMe,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMhB,KAAK,CAACiB,IAAI,CAAC,iBAAiB,EAAE;QAAET,QAAQ;QAAEU;MAAS,CAAC,CAAC;MAC3DL,eAAe,CAAC,4BAA4B,CAAC;MAC7CF,YAAY,CAAC,IAAI,CAAC;IACpB,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdN,eAAe,CAAC,iCAAiC,GAAGM,KAAK,CAACC,QAAQ,CAACC,IAAI,CAAC;MACxEV,YAAY,CAAC,IAAI,CAAC;IACpB;EACF,CAAC;EAED,MAAMW,WAAW,GAAGA,CAAA,KAAMX,YAAY,CAAC,KAAK,CAAC;EAE7C,oBACER,OAAA,CAAAE,SAAA;IAAAkB,QAAA,gBACEpB,OAAA,CAACF,WAAW;MAACS,SAAS,EAAEA,SAAU;MAACY,WAAW,EAAEA,WAAY;MAACE,KAAK,EAAC,cAAc;MAACD,QAAQ,EAAEX;IAAa;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5GzB,OAAA;MAAM0B,QAAQ,EAAEf,WAAY;MAAAS,QAAA,gBAC1BpB,OAAA;QAAAoB,QAAA,GAAO,SAEL,eAAApB,OAAA;UAAO2B,IAAI,EAAC,MAAM;UAACC,KAAK,EAAEvB,QAAS;UAACwB,QAAQ,EAAGjB,CAAC,IAAKN,WAAW,CAACM,CAAC,CAACkB,MAAM,CAACF,KAAK;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/E,CAAC,eACNzB,OAAA;QAAQ2B,IAAI,EAAC,QAAQ;QAAAP,QAAA,EAAC;MAAe;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC;EAAA,eACP,CAAC;AAEP,CAAC;AAACrB,EAAA,CA/BID,KAAK;AAAA4B,EAAA,GAAL5B,KAAK;AAiCX,eAAeA,KAAK;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}